@model Aplicacion.Models.UsuarioViewModel
@{
    ViewData["Title"] = "Clientes"; 
}

<style>
    .b-example-divider {
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }

    .custom-tooltip {
        --bs-tooltip-bg: var(--bs-primary);
    }
</style>

<div class="b-example-divider"></div>

<!-- Inicio Clientes -->
<div class="container" style="margin-top: 50px; margin-bottom: 100px;">
    <div class="col-lg-7 text-center text-lg-start">
        <p class="display-6 fw-bold mb-3" style="font-weight: 500!important;">
            <i class="fa-solid fa-users fa-md"></i>
            Clientes
        </p>
    </div>
    <div class="container">
        <div class="row justify-content-end">
            <div class="col-md-4 col-sm-12">
                <div class="container-fluid">
                    <form role="search">
                        <div class="row">
                            <div class="col-12">
                                <input class="form-control me-2" type="text" name="buscar"
                                       data-bs-toggle="tooltip" data-bs-placement="right"
                                       data-bs-custom-class="custom-tooltip"
                                       data-bs-title="El criterio de busqueda es por apellido"
                                       autocomplete="off"
                                       placeholder="Buscar..." id="BuscadorUsuarios">
                            </div>
                        </div>
                        <div class="row" style="margin-top: 20px;">
                            <div class="col-md-6 col-sm-12">
                                <button class="btn btn-success" type="button" id="btnBuscar">Buscar</button>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <a class="btn btn-primary" onclick="listarUsuarios('reset')">Listado completo</a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="container" id="containerListaUsuarios">
        @await Html.PartialAsync("_ListarUsuarios", Model)
    </div>
    
</div>

    <!--Inicio de modales-->

    <!--Modal de nuevo de clientes-->
    <div class="modal fade" id="modalNuevoCliente" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">
                        <i class="fa-solid fa-user-plus fa-xl" style="color: #000000;"></i>
                        Nuevo cliente
                    </h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form autocomplete="off" class="row g-3 needs-validation" novalidate id="formNuevoCliente">
                        <div class="col-md-12">
                            <label for="validationCustomUsername" class="form-label">Email</label>
                            <div class="input-group has-validation">
                                <span class="input-group-text" id="inputGroupPrepend">@@</span>
                                <input type="email" class="form-control" maxlength="50" id="nuevoEmail" aria-describedby="inputGroupPrepend" required>
                                <div class="valid-feedback">
                                    Bien!
                                </div>
                                <div class="invalid-feedback">
                                    Ingrese un email válido (con @@)!
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="validationCustom01" class="form-label">Nombre</label>
                            <input type="text" class="form-control" maxlength="20" id="nuevoNombre" required>
                            <div class="valid-feedback">
                                Bien!
                            </div>
                            <div class="invalid-feedback">
                                Ingrese un nombre!
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="validationCustom02" class="form-label">Apellido</label>
                            <input type="text" class="form-control" maxlength="20" id="nuevoApellido" required>
                            <div class="valid-feedback">
                                Bien!
                            </div>
                            <div class="invalid-feedback">
                                Ingresa un apellido!
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="validationCustom02" class="form-label">Dirección</label>
                            <input type="text" class="form-control" maxlength="20" id="nuevoDireccion" required>
                            <div class="valid-feedback">
                                Bien!
                            </div>
                            <div class="invalid-feedback">
                                Ingresa una dirección!
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="validationCustom03" class="form-label">Telefono</label>
                            <input type="text" class="form-control" minlength="10" maxlength="10" pattern="\d*" id="nuevoTelefono" required>
                            <div class="valid-feedback">
                                Bien!
                            </div>
                            <div class="invalid-feedback">
                                Ingresa un número de telefono válido para Argentina (10 dígitos)!
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary btn-Cancelar" data-bs-dismiss="modal">Cancelar</button>
                            <button type="button" class="btn btn-primary" data-funcion="registrarNuevoCliente">Aceptar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!--Fin de modal de nuevo de clientes-->
    <!--Modal de modificacion de clientes-->
    <div class="modal fade" id="modalModificarCliente" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">
                        <i class="fa-solid fa-user-pen fa-xl" style="color: #000000;"></i>
                        Editar cliente
                    </h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form autocomplete="off" class="row g-3 needs-validation" novalidate id="formModificarCliente">
                        <div class="col-md-12">
                            <label for="validationCustomUsername" class="form-label">Email</label>
                            <div class="input-group has-validation">
                                <span class="input-group-text" id="inputGroupPrepend">@@</span>
                                <input type="email" maxlength="50" class="form-control" id="modificarEmail" aria-describedby="inputGroupPrepend" required>
                                <div class="valid-feedback">
                                    Bien!
                                </div>
                                <div class="invalid-feedback">
                                    Ingrese un email válido (con @@)!
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="validationCustom01" class="form-label">Nombre</label>
                            <input type="text" maxlength="20" class="form-control" id="modificarNombre" required>
                            <div class="valid-feedback">
                                Bien!
                            </div>
                            <div class="invalid-feedback">
                                Ingrese un nombre!
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="validationCustom02" class="form-label">Apellido</label>
                            <input type="text" maxlength="20" class="form-control" id="modificarApellido" required>
                            <div class="valid-feedback">
                                Bien!
                            </div>
                            <div class="invalid-feedback">
                                Ingresa un apellido!
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="validationCustom02" class="form-label">Dirección</label>
                            <input type="text" maxlength="20" class="form-control" id="modificarDireccion" required>
                            <div class="valid-feedback">
                                Bien!
                            </div>
                            <div class="invalid-feedback">
                                Ingresa una dirección!
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="validationCustom03" class="form-label">Telefono</label>
                            <input type="text" minlength="10" maxlength="10" pattern="\d*" class="form-control" id="modificarTelefono" required>
                            <div class="valid-feedback">
                                Bien!
                            </div>
                            <div class="invalid-feedback">
                                Ingresa un número de telefono válido para Argentina (10 dígitos)!
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label for="validationCustom04" class="form-label">Estado</label>
                            <select class="form-select" id="modificarEstado" required>
                                <option selected disabled value="">Elige...</option>
                                <option value="1">Activo</option>
                                <option value="0">Baneado</option>
                            </select>
                            <div class="valid-feedback">
                                Bien!
                            </div>
                            <div class="invalid-feedback">
                                Por favor selecciona un estado!
                            </div>
                        </div>
                        <div style="display: none;">
                            <input type="hidden" id="modificarIdRol">
                            <input type="hidden" id="modificarPass">
                            <input type="hidden" id="modificarId">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary btn-Cancelar" data-bs-dismiss="modal">Cancelar</button>
                            <button type="button" class="btn btn-primary" data-funcion="aceptarModificarCliente">Aceptar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!--Fin de modal de modificacion de clientes-->

    <!--Fin de modales-->

<!-- Fin Clientes -->

<div class="b-example-divider"></div>


@section Scripts{
    <!-- Constantes de inicializacion de tooltips -->
    <script>
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
    </script>

    <!-- Validacion de relleno de formulario -->
    <script>
        (() => {
            'use strict'

            // Fetch all the forms with the '.needs-validation' class
            const forms = document.querySelectorAll('.needs-validation');

            // Loop over the forms
            Array.from(forms).forEach(form => {
                // Select the buttons within each form
                const buttons = form.querySelectorAll('button');

                // Loop over the buttons and attach event listeners
                Array.from(buttons).forEach(button => {
                    if (!button.classList.contains('btn-Cancelar')) {
                        // For 'Aceptar' buttons
                        button.addEventListener('click', event => {
                            if (!form.checkValidity()) {
                                event.preventDefault();
                                event.stopPropagation();
                            }

                            form.classList.add('was-validated');

                            if (form.checkValidity()) {
                                const functionName = button.dataset.funcion;
                                if (functionName) {
                                    // Execute the specified function
                                    window[functionName]();
                                }
                            }
                        }, false);
                    } else {
                        // For 'Cancelar' buttons
                        button.addEventListener('click', () => {
                            form.reset();
                            form.classList.remove('was-validated');
                        }, false);
                    }
                });
            });
        })()
    </script>

    <!-- Listado de usuarios -->
    <script>
        $(document).ready(function () {
            // Asegurar que se ejecute en la 1er carga de la vista
            cambiarPagina();

            // Obtiene el valor ingresado en el buscador cada vez que se presione una tecla escribiendo sobre el
            document.getElementById('BuscadorUsuarios').addEventListener('input', listarUsuarios);
        });

        function cambiarPagina() {
            // Obtener todos los elementos <a> con la clase "numero-pagina"
            const elementosPagina = document.querySelectorAll('.page-link');

            // Agregar un evento de escucha de clic a cada elemento
            elementosPagina.forEach(elemento => {
                elemento.addEventListener('click', function () {
                    // Obtener el valor del atributo data-numeroPagina
                    const numeroPagina = this.getAttribute('data-numeroPagina');
                    //Tomar el texto ingresado en la busqueda
                    var filtroActual = document.getElementById('BuscadorUsuarios').value;

                    $.ajax({
                        url: '@Url.Action("listarUsuarios", "Usuarios")',
                        type: 'GET',
                        data: { query: filtroActual, numeroPagina: numeroPagina },
                        success: function (data) {
                            // Actualizar el contenido del contenedor de la lista de usuarios
                            $('#containerListaUsuarios').html(data);
                            //Carga los nuevos numeros de pagina
                            cambiarPagina();
                        },
                        error: function () {
                            alert('Error al buscar usuarios');
                        }
                    });
                });
            });
        }

        function listarUsuarios(reset) {
            var filtroActual = document.getElementById('BuscadorUsuarios').value;
            if (reset == "reset"){
                filtroActual = null;
                document.getElementById('BuscadorUsuarios').value = "";
            }

            // Realizar la petición Ajax
            $.ajax({
                url: '@Url.Action("listarUsuarios", "Usuarios")', // Ruta de la acción del controlador para buscar usuarios
                type: 'GET',
                data: { query: filtroActual }, // Envía el valor del buscador como parámetro de la búsqueda
                success: function (data) {
                    // Actualizar el contenido del contenedor de la lista de usuarios
                    $('#containerListaUsuarios').html(data);
                    //Carga los nuevos numeros de pagina
                    cambiarPagina();
                },
                error: function () {
                    alert('Error al buscar usuarios');
                }
            });
        }
    </script>

    <!-- Registro de nuevo cliente -->
    <script>
        function registrarNuevoCliente() {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            Swal.fire({
                title: '¿Desea registrar a un nuevo cliente?',
                text: "Confirme la acción",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Confirmar',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    var user = {
                        email: document.getElementById("nuevoEmail").value,
                        nombre: document.getElementById("nuevoNombre").value,
                        apellido: document.getElementById("nuevoApellido").value,
                        telefono: document.getElementById("nuevoTelefono").value,
                        direccion: document.getElementById("nuevoDireccion").value,
                    };

                    $.ajax({
                        url: '@Url.Action("Registrar", "Usuarios")',
                        type: 'POST',
                        dataType: 'json',
                        
                        contentType: 'application/json',
                        data: JSON.stringify(user),
                        async:false,
                        success: function (data) {
                            if (data.success) {
                                console.log("hola");
                                listarUsuarios();
                                $('#modalNuevoCliente').modal('hide');
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Cliente registrado!',
                                    text: data.message,
                                    footer: '<div class="alert alert-info" role="alert">Se ha enviado un email al correro ingresado para confirmar el registro solicitando el cambio de contraseña</div>'
                                })
                                var form = document.getElementById("formNuevoCliente");
                                form.reset();
                                form.classList.remove('was-validated');

                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error...',
                                    text: data.message
                                })
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error...',
                                text: 'Ocurrio un erorr!'
                            })
                        }
                    });
                }
            })
        }
    </script>

    <!-- Modificacion de usuarios -->
    <script>
        //Obtener los datos del cliente y mostralos en el modal
        $(document).on('click', '.btnVisualizarUsuario', function () {
            var idUsuario = $(this).data('usuario-id'); // Obtener el valor del campo de entrada de texto
            $.ajax({
                url: '@Url.Action("Detalles", "Usuarios")',
                type: 'POST',
                dataType: 'json',
                data: { id: idUsuario }, // Enviar los datos al controlador
                success: function (data) {
                    document.getElementById("modificarEmail").value = data.email;
                    document.getElementById("modificarNombre").value = data.nombre;
                    document.getElementById("modificarApellido").value = data.apellido;
                    document.getElementById("modificarDireccion").value = data.direccion;
                    document.getElementById("modificarTelefono").value = data.telefono;
                    document.getElementById("modificarEstado").value = data.estado;
                    document.getElementById("modificarId").value = data.id;
                    document.getElementById("modificarIdRol").value = data.idRol;
                    document.getElementById("modificarPass").value = data.pass;
                    $('#modalModificarCliente').modal('show');
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Ocurrio un erorr!'
                    })
                }
            });
        });

        // Aceptar la modificacion del cliente
        function aceptarModificarCliente() {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            Swal.fire({
                title: '¿Desea modificar la info. del cliente?',
                text: "Confirme la acción",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Confirmar',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    var user = {
                        id: document.getElementById("modificarId").value,
                        email: document.getElementById("modificarEmail").value,
                        nombre: document.getElementById("modificarNombre").value,
                        apellido: document.getElementById("modificarApellido").value,
                        telefono: document.getElementById("modificarTelefono").value,
                        direccion: document.getElementById("modificarDireccion").value,
                        estado: document.getElementById("modificarEstado").value,
                        idRol: document.getElementById("modificarIdRol").value,
                        pass: document.getElementById("modificarPass").value
                    };

                    $.ajax({
                        url: '@Url.Action("Modificar", "Usuarios")',
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/json',
                        data: JSON.stringify(user),
                        success: function (data) {
                            if (data.success) {
                                listarUsuarios();
                                $('#modalModificarCliente').modal('hide');
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Información actualizada!',
                                    text: data.message
                                })
                                var form = document.getElementById("formModificarCliente");
                                form.reset();
                                form.classList.remove('was-validated');
                                
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error...',
                                    text: data.message
                                })
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                            console.log(status);
                            console.log(error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error...',
                                text: 'Ocurrio un error!'
                            })
                        }
                    });
                }
            })
        }
    </script>
  
}